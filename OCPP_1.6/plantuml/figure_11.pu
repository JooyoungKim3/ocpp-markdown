@startuml figure_11
!include style.puml

actor "User" as User
participant "EV" as EV
participant "Charge Point" as ChargePoint
participant "Local Controller" as LocalController
participant "Central System" as CentralSystem

note over User, CentralSystem
  RFID or other Authorization
end note

ChargePoint -> EV : set max current(limit)
activate ChargePoint

ChargePoint -> ChargePoint : switch power on()

EV -> ChargePoint : start charging
activate EV

ChargePoint -> CentralSystem : \
  StartTransaction.req(connectorId, idTag, meterStart, timestamp,\
  \n[reservationId])

activate LocalController
LocalController -> CentralSystem : \
  StartTransaction.req(connectorId, idTag, meterStart, timestamp,\
  \n[reservationId])
activate CentralSystem

CentralSystem -> LocalController : StartTransaction.conf(idTagInfo, transactionId)
deactivate CentralSystem

LocalController -> ChargePoint : StartTransaction.conf(idTagInfo, transactionId)
deactivate LocalController

group loop Change according to charging profile 
else for each interval period in charging profile

  ChargePoint -> ChargePoint : get limit from charging profile():limit
  note right
    Charge Point implements charging
    profile via the Control Pilot
    signal whenever maximum current
    needs changing.
  end note

  ChargePoint -> EV : set max current(limit)
  deactivate ChargePoint

  opt Change of limits by controller
    LocalController -> ChargePoint :\
      SetChargingProfile.req(connectorId, csChargingProfiles)
    activate LocalController
    activate ChargePoint

    note right of LocalController
      Local Controller decides to
      change the charging profile.
    end note

    ChargePoint -> LocalController : SetChargingProfile.conf(Accepted)
    deactivate ChargePoint
    deactivate LocalController
  end
end

note over User, CentralSystem
  RFID or other Authorization
end note

ChargePoint -> EV : end charging()

ChargePoint -> ChargePoint : switch power off()

ChargePoint -> LocalController : \
  StopTransaction.req(meterStop, timestamp,\
  \ntransactionId, reason, [idTag], [transactionData])
activate ChargePoint
activate LocalController

LocalController -> CentralSystem : \
  StopTransaction.req(meterStop, timestamp,\
  \ntransactionId, reason, [idTag], [transactionData])
activate CentralSystem

CentralSystem -> LocalController : StopTransaction.conf([idTagInfo])
deactivate CentralSystem

LocalController -> ChargePoint : StopTransaction.conf([idTagInfo])
deactivate LocalController
deactivate ChargePoint
deactivate EV

@enduml